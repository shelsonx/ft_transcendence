# Generated by Django 5.0.3 on 2024-06-22 00:21
from enum import IntEnum

from django.db import migrations, models


class GameStatus(IntEnum):
    PENDING = 0
    SCHEDULED = 1
    ONGOING = 2
    PAUSED = 3
    ENDED = 4
    CANCELED = 5
    TOURNAMENT = 6

class RoundStatus(models.IntegerChoices):
    WAITING = 0
    ON_GOING = 1
    ENDED = 2


def get_next_or_current_game(round):
    not_completed_games = None

    match round.status:
        case RoundStatus.ENDED:
            return None
        case RoundStatus.WAITING:
            not_completed_games = round.games.filter(status=GameStatus.TOURNAMENT)
        case RoundStatus.ON_GOING:
            status = [GameStatus.SCHEDULED, GameStatus.ONGOING, GameStatus.PAUSED]
            not_completed_games = round.games.filter(status__in=status)
            if not not_completed_games.exists():
                status = GameStatus.TOURNAMENT
                not_completed_games = round.games.filter(status=status)

    if not_completed_games is None:
        return None
    return not_completed_games.order_by("-game_datetime").first()

def forwards(apps, schema_editor):
    GameModel: models.Model = apps.get_model("core", "game")

    for g in GameModel.objects.filter(status=GameStatus.SCHEDULED):
        round = g.round.all().first()
        if round:
            current_game = get_next_or_current_game(round)
            if g != current_game:
                g.status = GameStatus.TOURNAMENT
                g.save()

def backwards(apps, schema_editor):
    GameModel: models.Model = apps.get_model("core", "game")

    for g in GameModel.objects.filter(status=GameStatus.TOURNAMENT):
        g.status = GameStatus.SCHEDULED
        g.save()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0030_tournamentplayer_verified'),
    ]

    operations = [
        migrations.AlterField(
            model_name='game',
            name='status',
            field=models.SmallIntegerField(choices=[(0, 'Pending confirmation'), (1, 'Scheduled'), (2, 'Ongoing'), (3, 'Paused'), (4, 'Ended'), (5, 'Canceled'), (6, 'Tournament scheduled game')], default=1, verbose_name='Game status'),
        ),
        migrations.RunPython(forwards, backwards),
    ]
